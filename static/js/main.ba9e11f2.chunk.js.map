{"version":3,"sources":["logic/operate.js","components/Calculator.js","logic/calculate.js","components/Navbar.js","pages/Home.js","pages/Quotes.js","App.js","reportWebVitals.js","index.js"],"names":["operate","numberOne","numberTwo","operation","one","Big","two","plus","toString","minus","times","div","err","mod","Error","Calculator","useState","total","next","item","setItem","clickButton","e","obj","buttonName","target","name","match","includes","parseFloat","className","type","onClick","Navbar","id","path","text","map","link","to","activeClassName","exact","Home","Quotes","style","marginTop","App","props","state","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.ba9e11f2.chunk.js","sourcesContent":["import Big from 'big.js';\n\nexport default function operate(numberOne, numberTwo, operation) {\n  const one = Big(numberOne);\n  const two = Big(numberTwo);\n  if (operation === '+') {\n    return one.plus(two).toString();\n  }\n  if (operation === '-') {\n    return one.minus(two).toString();\n  }\n  if (operation === 'x') {\n    return one.times(two).toString();\n  }\n  if (operation === 'รท') {\n    try {\n      return one.div(two).toString();\n    } catch (err) {\n      return \"Can't divide by 0.\";\n    }\n  }\n  if (operation === '%') {\n    return one.mod(two).toString();\n  }\n  throw Error(`Unknown operation '${operation}'`);\n}\n","import React, { useState } from 'react';\nimport calculate from '../logic/calculate';\n\nconst Calculator = () => {\n  const [item, setItem] = useState({\n    total: 0,\n    next: null,\n    operation: null,\n  });\n\n  const clickButton = (e) => {\n    setItem({ ...item, ...calculate(item, e.target.name) });\n  };\n\n  return (\n    <div className=\"calculator-page\">\n      <aside>Let&apos;s do some maths!</aside>\n      <section className=\"calculator-section\">\n        <p className=\"result\">\n          {item.total}\n          {item.operation}\n          {item.next}\n        </p>\n        <button type=\"button\" name=\"AC\" onClick={clickButton}>AC</button>\n        <button type=\"button\" name=\"+/-\" onClick={clickButton}>+/-</button>\n        <button type=\"button\" name=\"%\" onClick={clickButton}>%</button>\n        <button type=\"button\" className=\"operator\" name=\"รท\" onClick={clickButton}>รท</button>\n        <button type=\"button\" name=\"7\" onClick={clickButton}>7</button>\n        <button type=\"button\" name=\"8\" onClick={clickButton}>8</button>\n        <button type=\"button\" name=\"9\" onClick={clickButton}>9</button>\n        <button type=\"button\" className=\"operator\" name=\"x\" onClick={clickButton}>x</button>\n        <button type=\"button\" name=\"4\" onClick={clickButton}>4</button>\n        <button type=\"button\" name=\"5\" onClick={clickButton}>5</button>\n        <button type=\"button\" name=\"6\" onClick={clickButton}>6</button>\n        <button type=\"button\" className=\"operator\" name=\"-\" onClick={clickButton}>-</button>\n        <button type=\"button\" name=\"1\" onClick={clickButton}>1</button>\n        <button type=\"button\" name=\"2\" onClick={clickButton}>2</button>\n        <button type=\"button\" name=\"3\" onClick={clickButton}>3</button>\n        <button type=\"button\" className=\"operator\" name=\"+\" onClick={clickButton}>+</button>\n        <button type=\"button\" className=\"zero\" name=\"0\" onClick={clickButton}>0</button>\n        <button type=\"button\" name=\".\" onClick={clickButton}>.</button>\n        <button type=\"button\" className=\"operator\" name=\"=\" onClick={clickButton}>=</button>\n      </section>\n    </div>\n  );\n};\n\nexport default Calculator;\n","import operate from './operate';\n\nfunction isNumber(item) {\n  return !!item.match(/[0-9]+/);\n}\n\n/**\n * Given a button name and a calculator data object, return an updated\n * calculator data object.\n *\n * Calculator data object contains:\n *   total:s      the running total\n *   next:String       the next number to be operated on with the total\n *   operation:String  +, -, etc.\n */\nexport default function calculate(obj, buttonName) {\n  if (buttonName === 'AC') {\n    return {\n      total: 0,\n      next: null,\n      operation: null,\n    };\n  }\n\n  if (isNumber(buttonName)) {\n    if (buttonName === '0' && obj.next === '0') {\n      return {};\n    }\n    // If there is an operation, update next\n    if (obj.operation) {\n      if (obj.next) {\n        return { ...obj, next: obj.next + buttonName };\n      }\n      return { ...obj, next: buttonName };\n    }\n    // If there is no operation, update next and clear the value\n    if (obj.next) {\n      return {\n        next: obj.next + buttonName,\n        total: null,\n      };\n    }\n    return {\n      next: buttonName,\n      total: null,\n    };\n  }\n\n  if (buttonName === '.') {\n    if (obj.next) {\n      if (obj.next.includes('.')) {\n        return { ...obj };\n      }\n      return { ...obj, next: `${obj.next}.` };\n    }\n    if (obj.operation) {\n      return { next: '0.' };\n    }\n    if (obj.total) {\n      if (obj.total.includes('.')) {\n        return {};\n      }\n      return { total: `${obj.total}.` };\n    }\n    return { total: '0.' };\n  }\n\n  if (buttonName === '=') {\n    if (obj.next && obj.operation) {\n      return {\n        total: operate(obj.total, obj.next, obj.operation),\n        next: null,\n        operation: null,\n      };\n    }\n    // '=' with no operation, nothing to do\n    return {};\n  }\n\n  if (buttonName === '+/-') {\n    if (obj.next) {\n      return { ...obj, next: (-1 * parseFloat(obj.next)).toString() };\n    }\n    if (obj.total) {\n      return { ...obj, total: (-1 * parseFloat(obj.total)).toString() };\n    }\n    return {};\n  }\n\n  // Button must be an operation\n\n  // When the user presses an operation button without having entered\n  // a number first, do nothing.\n  // if (!obj.next && !obj.total) {\n  //   return {};\n  // }\n\n  // User pressed an operation after pressing '='\n  if (!obj.next && obj.total && !obj.operation) {\n    return { ...obj, operation: buttonName };\n  }\n\n  // User pressed an operation button and there is an existing operation\n  if (obj.operation) {\n    if (obj.total && !obj.next) {\n      return { ...obj, operation: buttonName };\n    }\n\n    return {\n      total: operate(obj.total, obj.next, obj.operation),\n      next: null,\n      operation: buttonName,\n    };\n  }\n\n  // no operation yet, but the user typed one\n\n  // The user hasn't typed a number yet, just save the operation\n  if (!obj.next) {\n    return { operation: buttonName };\n  }\n\n  // save the operation and shift 'next' into 'total'\n  return {\n    total: obj.next,\n    next: null,\n    operation: buttonName,\n  };\n}\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst Navbar = () => {\n  const links = [\n    {\n      id: 1,\n      path: '/',\n      text: 'Home',\n    },\n    {\n      id: 2,\n      path: '/calculator',\n      text: 'Calculator',\n    },\n    {\n      id: 3,\n      path: '/quotes',\n      text: 'Quotes',\n    },\n  ];\n\n  return (\n    <header>\n      <nav>\n        <div className=\"navbar\">\n          <h1>Math Magicians</h1>\n          <ul>\n            {links.map((link) => (\n              <li key={link.id}>\n                <NavLink\n                  to={link.path}\n                  activeClassName=\"current\"\n                  className=\"nav-link\"\n                  exact\n                >\n                  {link.text}\n                </NavLink>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </nav>\n    </header>\n  );\n};\n\nexport default Navbar;\n","import React from 'react';\n\nconst Home = () => (\n  <div className=\"home-div\">\n    <h2>Welcome To Our Page!</h2>\n    <p>\n      Lorem ipsum dolor sit amet consectetur adipisicing elit. Eum totam molestiae quas quae\n      explicabo odit quisquam nemo, dolore voluptatum rerum! Illo ad vel, quidem voluptates\n      provident facere eius perspiciatis necessitatibus, saepe rem odio optio voluptatum animi\n      veniam dolorem temporibus itaque excepturi inventore minima ipsum, voluptatem enim\n      soluta. Saepe doloribus ex enim, recusandae alias, distinctio non laudantium autem magnam\n      inventore eveniet!\n    </p>\n    <p>\n      Lorem ipsum dolor, sit amet consectetur adipisicing elit. Ut temporibus iusto incidunt\n      ullam soluta repellat cupiditate qui, voluptatibus debitis iure, perferendis totam.\n      Placeat cum consequatur corrupti cumque saepe, blanditiis modi obcaecati nisi minus\n      nostrum quibusdam vel dolore quaerat? Corrupti, eos.\n    </p>\n  </div>\n);\n\nexport default Home;\n","import React from 'react';\n\nconst Quotes = () => (\n  <blockquote style={{ marginTop: '10%' }}>\n    The definition of a good mathematical problem is the mathematics it generates, rather\n    than the problem itself. ~Andrew Wiles\n  </blockquote>\n);\n\nexport default Quotes;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Calculator from './components/Calculator';\nimport Navbar from './components/Navbar';\nimport Home from './pages/Home';\nimport Quotes from './pages/Quotes';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route path=\"/calculator\">\n            <Calculator />\n          </Route>\n          <Route path=\"/quotes\">\n            <Quotes />\n          </Route>\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then((\n      {\n        getCLS, getFID, getFCP, getLCP, getTTFB,\n      },\n    ) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename={process.env.PUBLIC_URL}>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}